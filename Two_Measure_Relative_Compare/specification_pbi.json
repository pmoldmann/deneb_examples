{
    "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
    "description" : "Display absolute deviations in a percentage bar chart so that deviations of different matters can be displayed in a single meaningful chart. The deviations from 0% are displayed. Field description: 'Attribute': If you want to display several bar charts for various attributes, use this for your dimensional field. 'Base' The measure that is the base value which will always be displayed at the 0%-position. 'Actual': The measure that deviates from the 'Base' Measure. ",
  
    "data": {
      "name": "dataset"
    },
    "params": [
      {
        "name": "manual_attribute_name",  //use this name if there is only one measure in the graph without a attribute dimension. Then you can use this to define the name of the attribute header
        "value": "+/- Plan"
      },
      {
        "name": "actual_name",  //this name is used in the graph to give the 'Actual' measure a name in the graph description and the tooltip.
        "value": "Installed Capacity:"
      },
      {
        "name": "base_name",  //this name is used in the graph to give the 'Base' measure a name in the graph description and the tooltip.
        "value": "Plan:"
      },
      {
        "name": "actual_color",
        "value": "black"
      },
      {
        "name": "base_color",
        "value": "#f0ebe5"
      },
      {
        "name": "positive_color",  //color to display positive values in the bar 
        "value": "green"
      },
      {
        "name": "negative_color",  //color to display negative values in the bar 
        "value": "#f2766c"
      },
      {
        "name": "bar_height",  //height of the outer bar
        "value": 20
      },
      {
        "name": "category_label_size",
        "value": 11
      },
      {
        "name": "text_size",
        "value": 10
      },
      {
        "name": "background_color",  //background color of the graph
        "value": "#FFFFFF"
      },
      {
        "name": "minimum_range",  //minimum +/- range to be displayed. If greater deviations are in the data, the range is extended to this value. 
        "value": 0.1
      }
    ],
    "height": {
      "step": 65
    },
    "transform": [
      {
        "filter": "datum['Base'] != null"
      },
      {
        "calculate": "isDefined(datum['Attribute']) ? datum['Attribute'] : manual_attribute_name",
        "as": "Attribute_Remapping"    //if there is no "Attribute" dimension, then the <manual_attribute_name> is taken as description.
      },
      {
        "calculate": "join(split(datum['Attribute_Remapping'],'|'),'\u000b')",
        "as": "Attribute_Name" //use this if you have long attribute names that need several lines. Define a char that shall be replaced by a line break. But seems not to work.
      },
      {
        "calculate": "datum['Actual'] - datum['Base']",
        "as": "diff"
      },
      {
        "calculate": "abs(datum.diff)",
        "as": "abs_diff"
      },    
      {
        "calculate": "datum['Base'] === null ? null : datum['Actual'] === null ? -1 : (datum['Actual'] - datum['Base'])/datum['Base']",
        "as": "rel_diff"
      },
      {
        "calculate": "abs(datum.rel_diff)",
        "as": "abs_rel_diff"
      },        
      {
        "calculate": "datum['Base'] === null || datum['Actual'] === null ? '' : pbiFormat(datum.rel_diff, '+0.#%;-0.#%')",
        "as": "rel_diff_formatted"
      },
      {
        "joinaggregate": [
          {
            "op": "max",
            "field": "abs_rel_diff",
            "as": "max_rel_diff"  //absolute maximum relative deviation in all rows
          }
        ]
      },
      {
        "calculate": "max(0 + minimum_range, 0 + datum.max_rel_diff)",
        "as": "x_pos_max_total_percent"
      },
      {
        "calculate": "min(0 - minimum_range,0 - datum['max_rel_diff'])",
        "as": "x_pos_min_total_percent"
      },
      {
        "calculate": "datum['Base'] === null  ? null : 0",
        "as": "x_pos_base"
      },
      {
        "calculate": "(0 + datum['rel_diff'])",
        "as": "x_pos_actual"
      },
      {
        "calculate": "datum.rel_diff < 0 ? negative_color : positive_color",
        "as": "color_indicator"
      },
      {
        "calculate": "datum.diff > 0 ? datum['Base__format'] : datum['Actual__format']",
        "as": "abs_diff_formatted"
      },
      {
        "calculate": "datum['Base'] === null || datum['Actual'] === null ? '' : pbiFormat(datum.diff, datum.abs_diff_formatted)",
        "as": "text_header"
      },
      {
        "calculate": "datum['Base'] === null ? '' : base_name + ' ' + datum['Base__formatted']",
        "as": "base_label_text_formatted"
      },
      {
        "calculate": "datum['Actual'] === null ? actual_name + '0â‚¬' : actual_name + ' ' + datum['Actual__formatted']",
        "as": "actual_label_text_formatted"
      },
      {
        "calculate": "datum['__selected__'] == 'off' ? 'url(#diagonal-stripe-6-50)' : 'url(#diagonal-stripe-6-50)'",
        "as": "base_bar_fill"
      }
    ],
    "encoding": {
      "x": {
        "type": "quantitative",
        "scale": {
          "nice": false,
           "domainMin": {
             "expr": "data('data_0')[0].x_pos_min_total_percent"
           },
           "domainMax": {
             "expr": "data('data_0')[0].x_pos_max_total_percent"
           }
        },
        "title": null,
        "axis": {
          "title": null,
          "format": ".0%",
          "tickCount": 5
        }
      },
      "y": {
        "field": "Attribute_Name",
        "type": "nominal",
        "title": null,
        "sort": {
          "field": "rel_diff", "order" : "descending"
        }
      },
      "opacity": {
        "condition": {
          "test": {
            "field": "__selected__",
            "equal": "off"
          },
          "value": 0.4
        },
        "value": 1
      }
    },
    "layer": [
      {
        "mark": {
          "description": "Base bar",
          "type": "bar",
          "orient": "horizontal",
          "color": {
            "expr": "base_color"
          },
          "stroke": "black",
          "strokeWidth": 2,
          "size": {
            "expr": "1 * bar_height"
          },
          "yOffset": 0
        },
        "encoding": {
          "x": {
            "field": "x_pos_min_total_percent"
          },
          "x2": {
            "field": "x_pos_max_total_percent"
          },
          "tooltip": [
            {
              "title": "Attribute",
              "field": "Attribute_Name"
            },
            {
              "title": "Absolute Deviation",
              "field": "text_header"
            },
            {
              "title": "Relative Deviation",
              "field": "rel_diff_formatted"
            },
            {
              "title": "Base Value",
              "field": "base_label_text_formatted"
            },
            {
              "title": "Actual Value",
              "field": "actual_label_text_formatted"
            }
          ]
        }
      },
      {
        "mark": {
          "description": "Actual Value bar",
          "type": "bar",
          "size": {
            "expr": "0.5 * bar_height"
          },
          "color": {
            "expr": "datum.color_indicator"
          },
          "yOffset": {
            "expr": "0.05*bar_height"
          },
          "tooltip": true
        },
        "encoding": {
          "x": {
            "field": "x_pos_base",
            "type": "quantitative"
          },
          "x2": {
            "field": "x_pos_actual"
          },
          "tooltip": [
            {
              "title": "Attribute",
              "field": "Attribute_Name"
            },
            {
              "title": "Absolute Deviation",
              "field": "text_header"
            },
            {
              "title": "Relative Deviation",
              "field": "rel_diff_formatted"
            },
            {
              "title": "Base Value",
              "field": "base_label_text_formatted"
            },
            {
              "title": "Actual Value",
              "field": "actual_label_text_formatted"
            }
          ]
        }
      },
      {
        "mark": {
          "description": "Indicator for 100% base line",
          "type": "bar",
          "stroke": "black",
          "strokeWidth": 1,
          "size": {
            "expr": "1.5 * bar_height"
          },
          "yOffset": {
            "expr": "-0.5 * bar_height"
          }
        },
        "encoding": {
          "x": {
            "field": "x_pos_base"
          },
          "x2": {
            "field": "x_pos_base"
          }
        }
      },
      {
        "mark": {
          "description": "Indicator for actual line",
          "type": "bar",
          "stroke": "black",
          "strokeWidth": 1,
          "size": {
            "expr": "1.5 * bar_height"
          },
          "yOffset": {
            "expr": "0.5 * bar_height"
          }
        },
        "encoding": {
          "x": {
            "field": "x_pos_actual"
          },
          "x2": {
            "field": "x_pos_actual"
          }
        }
      },
      {
        "mark": {
          "description": "Base Label Text",
          "type": "text",
          "dx": 0,
          "dy": 0,
          "xOffset": -2,
          "yOffset": {
            "expr": "-0.7*bar_height"
          },
          "align": "right",
          "baseline": "bottom"
        },
        "encoding": {
          "x": {
            "field": "x_pos_base"
          },
          "text": {
            "field": "base_label_text_formatted"
          }
        }
      },
      {
        "mark": {
          "description": "Actual Label Text",
          "type": "text",
          "dx": 0,
          "dy": 0,
          "xOffset": { "expr": "datum['rel_diff'] < 0 ? 2 : -2"},
          "yOffset": {
            "expr": "1.3*bar_height + 1"
          },
          "align": { "expr": "datum['rel_diff'] < 0 ? 'left' : 'right'"},
          "baseline": "bottom"
        },
        "encoding": {
          "x": {
            "field": "x_pos_actual"
          },
          "text": {
            "field": "actual_label_text_formatted"
          }
        }
      },
      {
        "mark": {
          "description": "Relative Deviation Text",
          "type": "text",
          "dx": 0,
          "dy": 0,
          "xOffset": 4,
          "yOffset": 7,
          "fontSize": {"expr": "text_size + 4"},
          "fontWeight": "bold",
          "align": "left",
          "baseline": "bottom"
        },
        "encoding": {
          "x": {
            "field": "x_pos_max_total_percent"
          },
          "text": {
            "field": "rel_diff_formatted"
          }
        }
      },
      {
        "mark": {
          "description": "Absolute Deviation Text",
          "type": "text",
          "dx": -44,
          "dy": -12,
          "xOffset": 4,
          "yOffset": -2,
          "fontSize": {"expr": "text_size + 4"},
          "fontWeight": "bold",        
          "align": "left",
          "baseline": "bottom"
        },
        "encoding": {
          "x": {
            "field": "x_pos_max_total_percent"
          },
          "text": {
            "field": "text_header"
          }
        }
      }
    ]
  }